{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","isFirstPage","isLastPage","length","className","classNames","disabled","href","onClick","map","page","active","items","App","useState","currPage","setCurrPage","setPerPage","splitItems","itemsCopy","pagesWithItems","splice","visibleItems","setVisibleItems","useEffect","firstItemIdx","indexOf","lastItemIdx","id","value","onChange","e","target","htmlFor","direction","curr","item","ReactDOM","render","document","getElementById"],"mappings":"kNAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAAH,GAKjC,IAJLC,EAAK,EAALA,MACAC,EAAO,EAAPA,QAAQ,EAAD,EACPC,mBAAW,MAAG,EAAC,EACfC,EAAY,EAAZA,aAEMC,EAAQX,EAAW,EAAGY,KAAKC,KAAKN,EAAQC,IACxCM,EAA8B,IAAhBL,EACdM,EAAaN,IAAgBE,EAAMA,EAAMK,OAAS,GAExD,OACE,qBAAIC,UAAU,aAAY,UACxB,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAAUL,IACZ,SAEA,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QAAS,kBAAMX,EAAa,SAAQ,oBAMvCC,EAAMW,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IACT,YACA,CAAEM,OAAQD,IAASd,IACnB,SAEF,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAa,KAAMa,IAAM,SAEvCA,KAZEA,MAiBT,oBAAIN,UAAWC,IACb,YACA,CAAEC,SAAUJ,IACZ,SAEA,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,kBAAMX,EAAa,SAAQ,wBC9DxCe,EAAQzB,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPsB,EAAgB,WAC3B,MAAgCC,mBAAS,GAAE,mBAApCC,EAAQ,KAAEC,EAAW,KAC5B,EAA8BF,mBAAS,GAAE,mBAAlCnB,EAAO,KAAEsB,EAAU,KAEpBC,EAAa,WAIjB,IAHA,IAAMC,EAAS,YAAOP,GAChBQ,EAAiB,GAEhBD,EAAUhB,QACfiB,EAAe5B,KAAK2B,EAAUE,OAAO,EAAG1B,IAG1C,OAAOyB,GAGT,EAAwCN,mBAASI,IAAa,IAAG,mBAA1DI,EAAY,KAAEC,EAAe,KAEpCC,qBAAU,WACRD,EAAgBL,IAAaH,EAAW,MACvC,CAACpB,EAASoB,IAEb,IAAMU,EAAeb,EAAMc,QAAQJ,EAAa,IAC1CK,EAAcf,EAAMc,QAAQJ,EAAaA,EAAanB,OAAS,IAmBrE,OACE,sBAAKC,UAAU,YAAW,UACxB,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAAM,wBACvBW,EAAQ,mBAAWU,EAAe,EAAC,cAAME,EAAc,EAAC,eAAOf,EAAMT,OAAM,OAGtF,sBAAKC,UAAU,iBAAgB,UAC7B,qBAAKA,UAAU,0BAAyB,SACtC,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAOlC,EACPmC,SApBO,SAACC,GAChBd,GAAYc,EAAEC,OAAOH,OACrBb,EAAY,IAkBe,UAEnB,wBAAQa,MAAM,IAAG,eACjB,wBAAQA,MAAM,IAAG,eACjB,wBAAQA,MAAM,KAAI,gBAClB,wBAAQA,MAAM,KAAI,qBAItB,uBAAOI,QAAQ,kBAAkB7B,UAAU,qBAAoB,+BAKjE,cAAC,EAAU,CACTV,MAAOkB,EAAMT,OACbR,QAASA,EACTC,YAAamB,EACblB,aAlDe,SAACqC,EAAqCxB,GACrDwB,EACFlB,GAAY,SAAAmB,GAAI,MAAmB,SAAdD,EAAuBC,EAAO,EAAIA,EAAO,KAK5DzB,GACFM,EAAYN,MA6CZ,6BACGY,EAAab,KAAI,SAAA2B,GAAI,OACpB,oBAAI,UAAQ,OAAM,SACfA,GADqBA,YCpFlCC,IAASC,OAAO,cAAC,EAAG,IAAKC,SAASC,eAAe,W","file":"static/js/main.0449e1a9.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage?: number;\n  onPageChange: (direction: ('next' | 'prev' | null), page?: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const pages = getNumbers(1, Math.ceil(total / perPage));\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === pages[pages.length - 1];\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        { disabled: isFirstPage },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={() => onPageChange('prev')}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          key={page}\n          className={classNames(\n            'page-item',\n            { active: page === currentPage },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(null, page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames(\n        'page-item',\n        { disabled: isLastPage },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={() => onPageChange('next')}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currPage, setCurrPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const splitItems = () => {\n    const itemsCopy = [...items];\n    const pagesWithItems = [];\n\n    while (itemsCopy.length) {\n      pagesWithItems.push(itemsCopy.splice(0, perPage));\n    }\n\n    return pagesWithItems;\n  };\n\n  const [visibleItems, setVisibleItems] = useState(splitItems()[0]);\n\n  useEffect(() => {\n    setVisibleItems(splitItems()[currPage - 1]);\n  }, [perPage, currPage]);\n\n  const firstItemIdx = items.indexOf(visibleItems[0]);\n  const lastItemIdx = items.indexOf(visibleItems[visibleItems.length - 1]);\n\n  const onPageChange = (direction: ('next' | 'prev' | null), page?: number) => {\n    if (direction) {\n      setCurrPage(curr => (direction === 'next' ? curr + 1 : curr - 1));\n\n      return;\n    }\n\n    if (page) {\n      setCurrPage(page);\n    }\n  };\n\n  const onSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+e.target.value);\n    setCurrPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currPage} (items ${firstItemIdx + 1} - ${lastItemIdx + 1} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={onSelect}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currPage}\n        onPageChange={onPageChange}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}